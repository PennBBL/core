dist: trusty
sudo: required

services:
- docker

env:
  global:
    - DOCKER_DIR="$HOME/.cache/docker"
    - NPM_CACHE="$HOME/.cache/npm"
    - GRADLE_CACHE="$HOME/.cache/gradle"
  matrix:
    - BUILD_SDK=true
    - BUILD_SDK=false

cache:
  directories:
  - $DOCKER_DIR
  - $NPM_CACHE
  - $GRADLE_CACHE

before_install:
- sudo apt-get update
- sudo apt-get -y install docker-ce realpath
- gem install travis -v 1.8.8 --no-rdoc --no-ri
- docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASS

install: true

script:
  - test -f "$DOCKER_DIR/image.tar" && docker load -i "$DOCKER_DIR/image.tar" || true
  - docker build -t core:base --target base .
  - docker build -t core:dist --target dist --build-arg VCS_BRANCH="$TRAVIS_BRANCH" --build-arg VCS_COMMIT="$TRAVIS_COMMIT" .
  - docker build -t core:testing --target testing .
  - if [ "$BUILD_SDK" = "false" ]; then
        ./tests/bin/docker-tests.sh --image core:testing;
    else
        if [ -n "$TRAVIS_TAG" ]; then
            DOC_VERSION="$TRAVIS_TAG";
            SDK_VERSION="$TRAVIS_TAG";
        else
            COMMIT_REF="$(git rev-parse --short HEAD)";
            DOC_VERSION="$TRAVIS_BRANCH/$COMMIT_REF";
            SDK_VERSION="2.0.0.dev${TRAVIS_BUILD_NUMBER}";
        fi;
        ./bin/build-sdk.sh $SDK_VERSION $DOC_VERSION;
    fi
  - docker save -o "$DOCKER_DIR/image.tar"
        $(docker history -q core:base | grep -v '<missing>')
        $(docker history -q core:dist | grep -v '<missing>')
        $(docker history -q core:testing | grep -v '<missing>');

after_success:
# Code coverage report for all master commits and all pull requests
- if [ "$TRAVIS_BRANCH" == "master" ] || [ "$TRAVIS_EVENT_TYPE" == "pull_request" ]; then
      bash <(curl -s https://codecov.io/bash) -c -X coveragepy -F python;
  fi

# Build swagger docs and push them to gh-pages (Only for SDK builds)
- if [ "$TRAVIS_EVENT_TYPE" == "push" ] || [ -n "$TRAVIS_TAG" ] && [ "$BUILD_SDK" == "true" ]; then
      git config --global user.email "travis@travis-ci.org";
      git config --global user.name "Travis CI";
      git config --global push.default simple;

      if [ -z "$TRAVIS_TAG" ]; then
          ./docs/push-docs.sh "$GIT_REMOTE" branches "$TRAVIS_BRANCH" "Travis Core Docs Build - $TRAVIS_BUILD_NUMBER";
      else
          ./docs/push-docs.sh "$GIT_REMOTE" tags "$TRAVIS_TAG" "Travis Core Docs Build - $TRAVIS_BUILD_NUMBER";
      fi
  fi

# Tag and push flywheel/core image (master >> :latest, tag >> :tag)
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_EVENT_TYPE" == "push" ]; then
      docker tag core:dist flywheel/core:latest;
      docker push flywheel/core:latest;
  fi
- if [ -n "$TRAVIS_TAG" ]; then
      docker tag core:dist flywheel/core:$TRAVIS_TAG;
      docker push flywheel/core:$TRAVIS_TAG;
  fi
- if [ "$TRAVIS_EVENT_TYPE" == "pull_request" ]; then
    docker tag core:dist flywheel/core:$TRAVIS_PULL_REQUEST_BRANCH.latest;
    docker push flywheel/core:$TRAVIS_PULL_REQUEST_BRANCH.latest;
    travis login --pro --no-interactive -g ${GITHUB_RELEASE_API_KEY};
    bin/trigger_build.sh $(travis token --no-interactive --pro) flywheel/core:$TRAVIS_PULL_REQUEST_BRANCH.latest;
  fi

deploy:
  provider: releases
  api_key: $GITHUB_RELEASE_API_KEY
  file_glob: true
  file: dist/*
  skip_cleanup: true
  draft: true
  name: $TRAVIS_TAG
  on:
    repo: flywheel-io/core
    tags: true
    condition: $BUILD_SDK = true && $TRAVIS_TAG =~ ^[0-9].*
